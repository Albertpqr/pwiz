// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SkylineDocument.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace pwiz.Skyline.Model.Serialization {

  /// <summary>Holder for reflection information generated from SkylineDocument.proto</summary>
  public static partial class SkylineDocumentReflection {

    #region Descriptor
    /// <summary>File descriptor for SkylineDocument.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SkylineDocumentReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVTa3lsaW5lRG9jdW1lbnQucHJvdG8ijxgKFFNreWxpbmVEb2N1bWVudFBy",
            "b3RvGmEKC0Fubm90YXRpb25zEgwKBG5vdGUYASABKAkSDQoFY29sb3IYAiAB",
            "KAUSNQoGdmFsdWVzGAMgAygLMiUuU2t5bGluZURvY3VtZW50UHJvdG8uQW5u",
            "b3RhdGlvblZhbHVlGjIKD0Fubm90YXRpb25WYWx1ZRIMCgRuYW1lGAEgASgJ",
            "EhEKCXRleHRWYWx1ZRgCIAEoCRr4BQoOVHJhbnNpdGlvblBlYWsSFgoOcmVw",
            "bGljYXRlSW5kZXgYASABKAUSHAoUZmlsZUluZGV4SW5SZXBsaWNhdGUYAiAB",
            "KAUSNgoJbWFzc0Vycm9yGAMgASgLMiMuU2t5bGluZURvY3VtZW50UHJvdG8u",
            "T3B0aW9uYWxGbG9hdBIVCg1yZXRlbnRpb25UaW1lGAQgASgCEhoKEnN0YXJ0",
            "UmV0ZW50aW9uVGltZRgFIAEoAhIYChBlbmRSZXRlbnRpb25UaW1lGAYgASgC",
            "EjcKCWRyaWZ0VGltZRgHIAEoCzIkLlNreWxpbmVEb2N1bWVudFByb3RvLk9w",
            "dGlvbmFsRG91YmxlEj0KD2RyaWZ0VGltZVdpbmRvdxgIIAEoCzIkLlNreWxp",
            "bmVEb2N1bWVudFByb3RvLk9wdGlvbmFsRG91YmxlEgwKBGFyZWEYCSABKAIS",
            "FgoOYmFja2dyb3VuZEFyZWEYCiABKAISDgoGaGVpZ2h0GAsgASgCEgwKBGZ3",
            "aG0YDCABKAISGAoQaXNGd2htRGVnZW5lcmF0ZRgNIAEoCBI1Cgl0cnVuY2F0",
            "ZWQYDiABKA4yIi5Ta3lsaW5lRG9jdW1lbnRQcm90by5PcHRpb25hbEJvb2wS",
            "PAoKaWRlbnRpZmllZBgPIAEoDjIoLlNreWxpbmVEb2N1bWVudFByb3RvLlBl",
            "YWtJZGVudGlmaWNhdGlvbhIMCgRyYW5rGBAgASgFEhMKC3JhbmtCeUxldmVs",
            "GBEgASgFEjsKEHBvaW50c0Fjcm9zc1BlYWsYEiABKAsyIS5Ta3lsaW5lRG9j",
            "dW1lbnRQcm90by5PcHRpb25hbEludBIuCgd1c2VyU2V0GBMgASgOMh0uU2t5",
            "bGluZURvY3VtZW50UHJvdG8uVXNlclNldBIYChBvcHRpbWl6YXRpb25TdGVw",
            "GBcgASgREjYKC2Fubm90YXRpb25zGBggASgLMiEuU2t5bGluZURvY3VtZW50",
            "UHJvdG8uQW5ub3RhdGlvbnMaSAoRVHJhbnNpdGlvblJlc3VsdHMSMwoFcGVh",
            "a3MYASADKAsyJC5Ta3lsaW5lRG9jdW1lbnRQcm90by5UcmFuc2l0aW9uUGVh",
            "axqxCAoKVHJhbnNpdGlvbhI1Cgdmb3JtdWxhGAEgASgLMiQuU2t5bGluZURv",
            "Y3VtZW50UHJvdG8uT3B0aW9uYWxTdHJpbmcSOQoLYXZlcmFnZU1hc3MYAiAB",
            "KAsyJC5Ta3lsaW5lRG9jdW1lbnRQcm90by5PcHRpb25hbERvdWJsZRI2Cght",
            "b25vTWFzcxgDIAEoCzIkLlNreWxpbmVEb2N1bWVudFByb3RvLk9wdGlvbmFs",
            "RG91YmxlEj0KD2N1c3RvbV9pb25fbmFtZRgGIAEoCzIkLlNreWxpbmVEb2N1",
            "bWVudFByb3RvLk9wdGlvbmFsU3RyaW5nEj8KEW1lYXN1cmVkX2lvbl9uYW1l",
            "GAcgASgLMiQuU2t5bGluZURvY3VtZW50UHJvdG8uT3B0aW9uYWxTdHJpbmcS",
            "OQoOZGVjb3lNYXNzU2hpZnQYCCABKAsyIS5Ta3lsaW5lRG9jdW1lbnRQcm90",
            "by5PcHRpb25hbEludBIRCgltYXNzSW5kZXgYCSABKBESOgoPaXNvdG9wZURp",
            "c3RSYW5rGAsgASgLMiEuU2t5bGluZURvY3VtZW50UHJvdG8uT3B0aW9uYWxJ",
            "bnQSQgoVaXNvdG9wZURpc3RQcm9wb3J0aW9uGAwgASgLMiMuU2t5bGluZURv",
            "Y3VtZW50UHJvdG8uT3B0aW9uYWxGbG9hdBIXCg9mcmFnbWVudE9yZGluYWwY",
            "DSABKBESGQoRY2FsY19uZXV0cmFsX21hc3MYDiABKAESDgoGY2hhcmdlGA8g",
            "ASgREhIKCmNsZWF2YWdlQWEYECABKAUSEAoIbG9zdE1hc3MYESABKAESNgoL",
            "YW5ub3RhdGlvbnMYEiABKAsyIS5Ta3lsaW5lRG9jdW1lbnRQcm90by5Bbm5v",
            "dGF0aW9ucxITCgtwcmVjdXJzb3JNehgTIAEoARIRCglwcm9kdWN0TXoYFCAB",
            "KAESPQoPY29sbGlzaW9uRW5lcmd5GBUgASgLMiQuU2t5bGluZURvY3VtZW50",
            "UHJvdG8uT3B0aW9uYWxEb3VibGUSQwoVZGVjbHVzdGVyaW5nUG90ZW50aWFs",
            "GBYgASgLMiQuU2t5bGluZURvY3VtZW50UHJvdG8uT3B0aW9uYWxEb3VibGUS",
            "NAoGbG9zc2VzGBcgAygLMiQuU2t5bGluZURvY3VtZW50UHJvdG8uVHJhbnNp",
            "dGlvbkxvc3MSMwoMZnJhZ21lbnRUeXBlGBggASgOMh0uU2t5bGluZURvY3Vt",
            "ZW50UHJvdG8uSW9uVHlwZRI4CgdsaWJJbmZvGBkgASgLMicuU2t5bGluZURv",
            "Y3VtZW50UHJvdG8uVHJhbnNpdGlvbkxpYkluZm8SOAoHcmVzdWx0cxgaIAEo",
            "CzInLlNreWxpbmVEb2N1bWVudFByb3RvLlRyYW5zaXRpb25SZXN1bHRzGh4K",
            "DU9wdGlvbmFsRmxvYXQSDQoFdmFsdWUYASABKAIaHwoOT3B0aW9uYWxEb3Vi",
            "bGUSDQoFdmFsdWUYASABKAEaHAoLT3B0aW9uYWxJbnQSDQoFdmFsdWUYASAB",
            "KBEaHwoOT3B0aW9uYWxTdHJpbmcSDQoFdmFsdWUYASABKAkauQEKDlRyYW5z",
            "aXRpb25Mb3NzEg8KB2Zvcm11bGEYASABKAkSGAoQbW9ub2lzb3RvcGljTWFz",
            "cxgCIAEoARITCgthdmVyYWdlTWFzcxgDIAEoARI6Cg1sb3NzSW5jbHVzaW9u",
            "GAQgASgOMiMuU2t5bGluZURvY3VtZW50UHJvdG8uTG9zc0luY2x1c2lvbhIY",
            "ChBtb2RpZmljYXRpb25OYW1lGAUgASgJEhEKCWxvc3NJbmRleBgGIAEoBRo0",
            "ChFUcmFuc2l0aW9uTGliSW5mbxIMCgRyYW5rGAEgASgFEhEKCWludGVuc2l0",
            "eRgCIAEoAhpHCg5UcmFuc2l0aW9uRGF0YRI1Cgt0cmFuc2l0aW9ucxgBIAMo",
            "CzIgLlNreWxpbmVEb2N1bWVudFByb3RvLlRyYW5zaXRpb24ieAoHVXNlclNl",
            "dBISCg5VU0VSX1NFVF9GQUxTRRAAEhEKDVVTRVJfU0VUX1RSVUUQARIVChFV",
            "U0VSX1NFVF9JTVBPUlRFRBACEhkKFVVTRVJfU0VUX1JFSU5URUdSQVRFRBAD",
            "EhQKEFVTRVJfU0VUX01BVENIRUQQBCJaCgxPcHRpb25hbEJvb2wSGQoVT1BU",
            "SU9OQUxfQk9PTF9NSVNTSU5HEAASFgoST1BUSU9OQUxfQk9PTF9UUlVFEAES",
            "FwoTT1BUSU9OQUxfQk9PTF9GQUxTRRACInIKElBlYWtJZGVudGlmaWNhdGlv",
            "bhIdChlQRUFLX0lERU5USUZJQ0FUSU9OX0ZBTFNFEAASHAoYUEVBS19JREVO",
            "VElGSUNBVElPTl9UUlVFEAESHwobUEVBS19JREVOVElGSUNBVElPTl9BTElH",
            "TkVEEAIirAEKB0lvblR5cGUSFAoQSU9OX1RZUEVfdW5rbm93bhAAEg4KCklP",
            "Tl9UWVBFX2EQARIOCgpJT05fVFlQRV9iEAISDgoKSU9OX1RZUEVfYxADEg4K",
            "CklPTl9UWVBFX3gQBBIOCgpJT05fVFlQRV95EAUSDgoKSU9OX1RZUEVfehAG",
            "EhYKEklPTl9UWVBFX3ByZWN1cnNvchAHEhMKD0lPTl9UWVBFX2N1c3RvbRAI",
            "IjMKDUxvc3NJbmNsdXNpb24SCwoHTGlicmFyeRAAEgkKBU5ldmVyEAESCgoG",
            "QWx3YXlzEAJCI6oCIHB3aXouU2t5bGluZS5Nb2RlbC5TZXJpYWxpemF0aW9u",
            "YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto), global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Parser, null, null, new[]{ typeof(global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.UserSet), typeof(global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalBool), typeof(global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.PeakIdentification), typeof(global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.IonType), typeof(global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.LossInclusion) }, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.Annotations), global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.Annotations.Parser, new[]{ "Note", "Color", "Values" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.AnnotationValue), global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.AnnotationValue.Parser, new[]{ "Name", "TextValue" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.TransitionPeak), global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.TransitionPeak.Parser, new[]{ "ReplicateIndex", "FileIndexInReplicate", "MassError", "RetentionTime", "StartRetentionTime", "EndRetentionTime", "DriftTime", "DriftTimeWindow", "Area", "BackgroundArea", "Height", "Fwhm", "IsFwhmDegenerate", "Truncated", "Identified", "Rank", "RankByLevel", "PointsAcrossPeak", "UserSet", "OptimizationStep", "Annotations" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.TransitionResults), global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.TransitionResults.Parser, new[]{ "Peaks" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.Transition), global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.Transition.Parser, new[]{ "Formula", "AverageMass", "MonoMass", "CustomIonName", "MeasuredIonName", "DecoyMassShift", "MassIndex", "IsotopeDistRank", "IsotopeDistProportion", "FragmentOrdinal", "CalcNeutralMass", "Charge", "CleavageAa", "LostMass", "Annotations", "PrecursorMz", "ProductMz", "CollisionEnergy", "DeclusteringPotential", "Losses", "FragmentType", "LibInfo", "Results" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalFloat), global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalFloat.Parser, new[]{ "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalDouble), global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalDouble.Parser, new[]{ "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalInt), global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalInt.Parser, new[]{ "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalString), global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalString.Parser, new[]{ "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.TransitionLoss), global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.TransitionLoss.Parser, new[]{ "Formula", "MonoisotopicMass", "AverageMass", "LossInclusion", "ModificationName", "LossIndex" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.TransitionLibInfo), global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.TransitionLibInfo.Parser, new[]{ "Rank", "Intensity" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.TransitionData), global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.TransitionData.Parser, new[]{ "Transitions" }, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class SkylineDocumentProto : pb::IMessage<SkylineDocumentProto> {
    private static readonly pb::MessageParser<SkylineDocumentProto> _parser = new pb::MessageParser<SkylineDocumentProto>(() => new SkylineDocumentProto());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SkylineDocumentProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::pwiz.Skyline.Model.Serialization.SkylineDocumentReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkylineDocumentProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkylineDocumentProto(SkylineDocumentProto other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkylineDocumentProto Clone() {
      return new SkylineDocumentProto(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SkylineDocumentProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SkylineDocumentProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SkylineDocumentProto other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the SkylineDocumentProto message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum UserSet {
        [pbr::OriginalName("USER_SET_FALSE")] False = 0,
        [pbr::OriginalName("USER_SET_TRUE")] True = 1,
        [pbr::OriginalName("USER_SET_IMPORTED")] Imported = 2,
        [pbr::OriginalName("USER_SET_REINTEGRATED")] Reintegrated = 3,
        [pbr::OriginalName("USER_SET_MATCHED")] Matched = 4,
      }

      public enum OptionalBool {
        [pbr::OriginalName("OPTIONAL_BOOL_MISSING")] Missing = 0,
        [pbr::OriginalName("OPTIONAL_BOOL_TRUE")] True = 1,
        [pbr::OriginalName("OPTIONAL_BOOL_FALSE")] False = 2,
      }

      public enum PeakIdentification {
        [pbr::OriginalName("PEAK_IDENTIFICATION_FALSE")] False = 0,
        [pbr::OriginalName("PEAK_IDENTIFICATION_TRUE")] True = 1,
        [pbr::OriginalName("PEAK_IDENTIFICATION_ALIGNED")] Aligned = 2,
      }

      public enum IonType {
        [pbr::OriginalName("ION_TYPE_unknown")] Unknown = 0,
        [pbr::OriginalName("ION_TYPE_a")] A = 1,
        [pbr::OriginalName("ION_TYPE_b")] B = 2,
        [pbr::OriginalName("ION_TYPE_c")] C = 3,
        [pbr::OriginalName("ION_TYPE_x")] X = 4,
        [pbr::OriginalName("ION_TYPE_y")] Y = 5,
        [pbr::OriginalName("ION_TYPE_z")] Z = 6,
        [pbr::OriginalName("ION_TYPE_precursor")] Precursor = 7,
        [pbr::OriginalName("ION_TYPE_custom")] Custom = 8,
      }

      public enum LossInclusion {
        [pbr::OriginalName("Library")] Library = 0,
        [pbr::OriginalName("Never")] Never = 1,
        [pbr::OriginalName("Always")] Always = 2,
      }

      public sealed partial class Annotations : pb::IMessage<Annotations> {
        private static readonly pb::MessageParser<Annotations> _parser = new pb::MessageParser<Annotations>(() => new Annotations());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Annotations> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Annotations() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Annotations(Annotations other) : this() {
          note_ = other.note_;
          color_ = other.color_;
          values_ = other.values_.Clone();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Annotations Clone() {
          return new Annotations(this);
        }

        /// <summary>Field number for the "note" field.</summary>
        public const int NoteFieldNumber = 1;
        private string note_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Note {
          get { return note_; }
          set {
            note_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "color" field.</summary>
        public const int ColorFieldNumber = 2;
        private int color_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Color {
          get { return color_; }
          set {
            color_ = value;
          }
        }

        /// <summary>Field number for the "values" field.</summary>
        public const int ValuesFieldNumber = 3;
        private static readonly pb::FieldCodec<global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.AnnotationValue> _repeated_values_codec
            = pb::FieldCodec.ForMessage(26, global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.AnnotationValue.Parser);
        private readonly pbc::RepeatedField<global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.AnnotationValue> values_ = new pbc::RepeatedField<global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.AnnotationValue>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.AnnotationValue> Values {
          get { return values_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Annotations);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Annotations other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Note != other.Note) return false;
          if (Color != other.Color) return false;
          if(!values_.Equals(other.values_)) return false;
          return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Note.Length != 0) hash ^= Note.GetHashCode();
          if (Color != 0) hash ^= Color.GetHashCode();
          hash ^= values_.GetHashCode();
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Note.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Note);
          }
          if (Color != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(Color);
          }
          values_.WriteTo(output, _repeated_values_codec);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Note.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Note);
          }
          if (Color != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Color);
          }
          size += values_.CalculateSize(_repeated_values_codec);
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Annotations other) {
          if (other == null) {
            return;
          }
          if (other.Note.Length != 0) {
            Note = other.Note;
          }
          if (other.Color != 0) {
            Color = other.Color;
          }
          values_.Add(other.values_);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 10: {
                Note = input.ReadString();
                break;
              }
              case 16: {
                Color = input.ReadInt32();
                break;
              }
              case 26: {
                values_.AddEntriesFrom(input, _repeated_values_codec);
                break;
              }
            }
          }
        }

      }

      public sealed partial class AnnotationValue : pb::IMessage<AnnotationValue> {
        private static readonly pb::MessageParser<AnnotationValue> _parser = new pb::MessageParser<AnnotationValue>(() => new AnnotationValue());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<AnnotationValue> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AnnotationValue() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AnnotationValue(AnnotationValue other) : this() {
          name_ = other.name_;
          textValue_ = other.textValue_;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AnnotationValue Clone() {
          return new AnnotationValue(this);
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 1;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "textValue" field.</summary>
        public const int TextValueFieldNumber = 2;
        private string textValue_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TextValue {
          get { return textValue_; }
          set {
            textValue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as AnnotationValue);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(AnnotationValue other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Name != other.Name) return false;
          if (TextValue != other.TextValue) return false;
          return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (TextValue.Length != 0) hash ^= TextValue.GetHashCode();
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Name.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (TextValue.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(TextValue);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (TextValue.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TextValue);
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(AnnotationValue other) {
          if (other == null) {
            return;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.TextValue.Length != 0) {
            TextValue = other.TextValue;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 18: {
                TextValue = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class TransitionPeak : pb::IMessage<TransitionPeak> {
        private static readonly pb::MessageParser<TransitionPeak> _parser = new pb::MessageParser<TransitionPeak>(() => new TransitionPeak());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<TransitionPeak> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TransitionPeak() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TransitionPeak(TransitionPeak other) : this() {
          replicateIndex_ = other.replicateIndex_;
          fileIndexInReplicate_ = other.fileIndexInReplicate_;
          MassError = other.massError_ != null ? other.MassError.Clone() : null;
          retentionTime_ = other.retentionTime_;
          startRetentionTime_ = other.startRetentionTime_;
          endRetentionTime_ = other.endRetentionTime_;
          DriftTime = other.driftTime_ != null ? other.DriftTime.Clone() : null;
          DriftTimeWindow = other.driftTimeWindow_ != null ? other.DriftTimeWindow.Clone() : null;
          area_ = other.area_;
          backgroundArea_ = other.backgroundArea_;
          height_ = other.height_;
          fwhm_ = other.fwhm_;
          isFwhmDegenerate_ = other.isFwhmDegenerate_;
          truncated_ = other.truncated_;
          identified_ = other.identified_;
          rank_ = other.rank_;
          rankByLevel_ = other.rankByLevel_;
          PointsAcrossPeak = other.pointsAcrossPeak_ != null ? other.PointsAcrossPeak.Clone() : null;
          userSet_ = other.userSet_;
          optimizationStep_ = other.optimizationStep_;
          Annotations = other.annotations_ != null ? other.Annotations.Clone() : null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TransitionPeak Clone() {
          return new TransitionPeak(this);
        }

        /// <summary>Field number for the "replicateIndex" field.</summary>
        public const int ReplicateIndexFieldNumber = 1;
        private int replicateIndex_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int ReplicateIndex {
          get { return replicateIndex_; }
          set {
            replicateIndex_ = value;
          }
        }

        /// <summary>Field number for the "fileIndexInReplicate" field.</summary>
        public const int FileIndexInReplicateFieldNumber = 2;
        private int fileIndexInReplicate_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int FileIndexInReplicate {
          get { return fileIndexInReplicate_; }
          set {
            fileIndexInReplicate_ = value;
          }
        }

        /// <summary>Field number for the "massError" field.</summary>
        public const int MassErrorFieldNumber = 3;
        private global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalFloat massError_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalFloat MassError {
          get { return massError_; }
          set {
            massError_ = value;
          }
        }

        /// <summary>Field number for the "retentionTime" field.</summary>
        public const int RetentionTimeFieldNumber = 4;
        private float retentionTime_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float RetentionTime {
          get { return retentionTime_; }
          set {
            retentionTime_ = value;
          }
        }

        /// <summary>Field number for the "startRetentionTime" field.</summary>
        public const int StartRetentionTimeFieldNumber = 5;
        private float startRetentionTime_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float StartRetentionTime {
          get { return startRetentionTime_; }
          set {
            startRetentionTime_ = value;
          }
        }

        /// <summary>Field number for the "endRetentionTime" field.</summary>
        public const int EndRetentionTimeFieldNumber = 6;
        private float endRetentionTime_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float EndRetentionTime {
          get { return endRetentionTime_; }
          set {
            endRetentionTime_ = value;
          }
        }

        /// <summary>Field number for the "driftTime" field.</summary>
        public const int DriftTimeFieldNumber = 7;
        private global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalDouble driftTime_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalDouble DriftTime {
          get { return driftTime_; }
          set {
            driftTime_ = value;
          }
        }

        /// <summary>Field number for the "driftTimeWindow" field.</summary>
        public const int DriftTimeWindowFieldNumber = 8;
        private global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalDouble driftTimeWindow_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalDouble DriftTimeWindow {
          get { return driftTimeWindow_; }
          set {
            driftTimeWindow_ = value;
          }
        }

        /// <summary>Field number for the "area" field.</summary>
        public const int AreaFieldNumber = 9;
        private float area_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float Area {
          get { return area_; }
          set {
            area_ = value;
          }
        }

        /// <summary>Field number for the "backgroundArea" field.</summary>
        public const int BackgroundAreaFieldNumber = 10;
        private float backgroundArea_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float BackgroundArea {
          get { return backgroundArea_; }
          set {
            backgroundArea_ = value;
          }
        }

        /// <summary>Field number for the "height" field.</summary>
        public const int HeightFieldNumber = 11;
        private float height_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float Height {
          get { return height_; }
          set {
            height_ = value;
          }
        }

        /// <summary>Field number for the "fwhm" field.</summary>
        public const int FwhmFieldNumber = 12;
        private float fwhm_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float Fwhm {
          get { return fwhm_; }
          set {
            fwhm_ = value;
          }
        }

        /// <summary>Field number for the "isFwhmDegenerate" field.</summary>
        public const int IsFwhmDegenerateFieldNumber = 13;
        private bool isFwhmDegenerate_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool IsFwhmDegenerate {
          get { return isFwhmDegenerate_; }
          set {
            isFwhmDegenerate_ = value;
          }
        }

        /// <summary>Field number for the "truncated" field.</summary>
        public const int TruncatedFieldNumber = 14;
        private global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalBool truncated_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalBool Truncated {
          get { return truncated_; }
          set {
            truncated_ = value;
          }
        }

        /// <summary>Field number for the "identified" field.</summary>
        public const int IdentifiedFieldNumber = 15;
        private global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.PeakIdentification identified_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.PeakIdentification Identified {
          get { return identified_; }
          set {
            identified_ = value;
          }
        }

        /// <summary>Field number for the "rank" field.</summary>
        public const int RankFieldNumber = 16;
        private int rank_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Rank {
          get { return rank_; }
          set {
            rank_ = value;
          }
        }

        /// <summary>Field number for the "rankByLevel" field.</summary>
        public const int RankByLevelFieldNumber = 17;
        private int rankByLevel_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int RankByLevel {
          get { return rankByLevel_; }
          set {
            rankByLevel_ = value;
          }
        }

        /// <summary>Field number for the "pointsAcrossPeak" field.</summary>
        public const int PointsAcrossPeakFieldNumber = 18;
        private global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalInt pointsAcrossPeak_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalInt PointsAcrossPeak {
          get { return pointsAcrossPeak_; }
          set {
            pointsAcrossPeak_ = value;
          }
        }

        /// <summary>Field number for the "userSet" field.</summary>
        public const int UserSetFieldNumber = 19;
        private global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.UserSet userSet_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.UserSet UserSet {
          get { return userSet_; }
          set {
            userSet_ = value;
          }
        }

        /// <summary>Field number for the "optimizationStep" field.</summary>
        public const int OptimizationStepFieldNumber = 23;
        private int optimizationStep_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int OptimizationStep {
          get { return optimizationStep_; }
          set {
            optimizationStep_ = value;
          }
        }

        /// <summary>Field number for the "annotations" field.</summary>
        public const int AnnotationsFieldNumber = 24;
        private global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.Annotations annotations_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.Annotations Annotations {
          get { return annotations_; }
          set {
            annotations_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as TransitionPeak);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(TransitionPeak other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ReplicateIndex != other.ReplicateIndex) return false;
          if (FileIndexInReplicate != other.FileIndexInReplicate) return false;
          if (!object.Equals(MassError, other.MassError)) return false;
          if (RetentionTime != other.RetentionTime) return false;
          if (StartRetentionTime != other.StartRetentionTime) return false;
          if (EndRetentionTime != other.EndRetentionTime) return false;
          if (!object.Equals(DriftTime, other.DriftTime)) return false;
          if (!object.Equals(DriftTimeWindow, other.DriftTimeWindow)) return false;
          if (Area != other.Area) return false;
          if (BackgroundArea != other.BackgroundArea) return false;
          if (Height != other.Height) return false;
          if (Fwhm != other.Fwhm) return false;
          if (IsFwhmDegenerate != other.IsFwhmDegenerate) return false;
          if (Truncated != other.Truncated) return false;
          if (Identified != other.Identified) return false;
          if (Rank != other.Rank) return false;
          if (RankByLevel != other.RankByLevel) return false;
          if (!object.Equals(PointsAcrossPeak, other.PointsAcrossPeak)) return false;
          if (UserSet != other.UserSet) return false;
          if (OptimizationStep != other.OptimizationStep) return false;
          if (!object.Equals(Annotations, other.Annotations)) return false;
          return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ReplicateIndex != 0) hash ^= ReplicateIndex.GetHashCode();
          if (FileIndexInReplicate != 0) hash ^= FileIndexInReplicate.GetHashCode();
          if (massError_ != null) hash ^= MassError.GetHashCode();
          if (RetentionTime != 0F) hash ^= RetentionTime.GetHashCode();
          if (StartRetentionTime != 0F) hash ^= StartRetentionTime.GetHashCode();
          if (EndRetentionTime != 0F) hash ^= EndRetentionTime.GetHashCode();
          if (driftTime_ != null) hash ^= DriftTime.GetHashCode();
          if (driftTimeWindow_ != null) hash ^= DriftTimeWindow.GetHashCode();
          if (Area != 0F) hash ^= Area.GetHashCode();
          if (BackgroundArea != 0F) hash ^= BackgroundArea.GetHashCode();
          if (Height != 0F) hash ^= Height.GetHashCode();
          if (Fwhm != 0F) hash ^= Fwhm.GetHashCode();
          if (IsFwhmDegenerate != false) hash ^= IsFwhmDegenerate.GetHashCode();
          if (Truncated != 0) hash ^= Truncated.GetHashCode();
          if (Identified != 0) hash ^= Identified.GetHashCode();
          if (Rank != 0) hash ^= Rank.GetHashCode();
          if (RankByLevel != 0) hash ^= RankByLevel.GetHashCode();
          if (pointsAcrossPeak_ != null) hash ^= PointsAcrossPeak.GetHashCode();
          if (UserSet != 0) hash ^= UserSet.GetHashCode();
          if (OptimizationStep != 0) hash ^= OptimizationStep.GetHashCode();
          if (annotations_ != null) hash ^= Annotations.GetHashCode();
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (ReplicateIndex != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(ReplicateIndex);
          }
          if (FileIndexInReplicate != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(FileIndexInReplicate);
          }
          if (massError_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(MassError);
          }
          if (RetentionTime != 0F) {
            output.WriteRawTag(37);
            output.WriteFloat(RetentionTime);
          }
          if (StartRetentionTime != 0F) {
            output.WriteRawTag(45);
            output.WriteFloat(StartRetentionTime);
          }
          if (EndRetentionTime != 0F) {
            output.WriteRawTag(53);
            output.WriteFloat(EndRetentionTime);
          }
          if (driftTime_ != null) {
            output.WriteRawTag(58);
            output.WriteMessage(DriftTime);
          }
          if (driftTimeWindow_ != null) {
            output.WriteRawTag(66);
            output.WriteMessage(DriftTimeWindow);
          }
          if (Area != 0F) {
            output.WriteRawTag(77);
            output.WriteFloat(Area);
          }
          if (BackgroundArea != 0F) {
            output.WriteRawTag(85);
            output.WriteFloat(BackgroundArea);
          }
          if (Height != 0F) {
            output.WriteRawTag(93);
            output.WriteFloat(Height);
          }
          if (Fwhm != 0F) {
            output.WriteRawTag(101);
            output.WriteFloat(Fwhm);
          }
          if (IsFwhmDegenerate != false) {
            output.WriteRawTag(104);
            output.WriteBool(IsFwhmDegenerate);
          }
          if (Truncated != 0) {
            output.WriteRawTag(112);
            output.WriteEnum((int) Truncated);
          }
          if (Identified != 0) {
            output.WriteRawTag(120);
            output.WriteEnum((int) Identified);
          }
          if (Rank != 0) {
            output.WriteRawTag(128, 1);
            output.WriteInt32(Rank);
          }
          if (RankByLevel != 0) {
            output.WriteRawTag(136, 1);
            output.WriteInt32(RankByLevel);
          }
          if (pointsAcrossPeak_ != null) {
            output.WriteRawTag(146, 1);
            output.WriteMessage(PointsAcrossPeak);
          }
          if (UserSet != 0) {
            output.WriteRawTag(152, 1);
            output.WriteEnum((int) UserSet);
          }
          if (OptimizationStep != 0) {
            output.WriteRawTag(184, 1);
            output.WriteSInt32(OptimizationStep);
          }
          if (annotations_ != null) {
            output.WriteRawTag(194, 1);
            output.WriteMessage(Annotations);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ReplicateIndex != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReplicateIndex);
          }
          if (FileIndexInReplicate != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(FileIndexInReplicate);
          }
          if (massError_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(MassError);
          }
          if (RetentionTime != 0F) {
            size += 1 + 4;
          }
          if (StartRetentionTime != 0F) {
            size += 1 + 4;
          }
          if (EndRetentionTime != 0F) {
            size += 1 + 4;
          }
          if (driftTime_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(DriftTime);
          }
          if (driftTimeWindow_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(DriftTimeWindow);
          }
          if (Area != 0F) {
            size += 1 + 4;
          }
          if (BackgroundArea != 0F) {
            size += 1 + 4;
          }
          if (Height != 0F) {
            size += 1 + 4;
          }
          if (Fwhm != 0F) {
            size += 1 + 4;
          }
          if (IsFwhmDegenerate != false) {
            size += 1 + 1;
          }
          if (Truncated != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Truncated);
          }
          if (Identified != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Identified);
          }
          if (Rank != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(Rank);
          }
          if (RankByLevel != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(RankByLevel);
          }
          if (pointsAcrossPeak_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(PointsAcrossPeak);
          }
          if (UserSet != 0) {
            size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) UserSet);
          }
          if (OptimizationStep != 0) {
            size += 2 + pb::CodedOutputStream.ComputeSInt32Size(OptimizationStep);
          }
          if (annotations_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(Annotations);
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(TransitionPeak other) {
          if (other == null) {
            return;
          }
          if (other.ReplicateIndex != 0) {
            ReplicateIndex = other.ReplicateIndex;
          }
          if (other.FileIndexInReplicate != 0) {
            FileIndexInReplicate = other.FileIndexInReplicate;
          }
          if (other.massError_ != null) {
            if (massError_ == null) {
              massError_ = new global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalFloat();
            }
            MassError.MergeFrom(other.MassError);
          }
          if (other.RetentionTime != 0F) {
            RetentionTime = other.RetentionTime;
          }
          if (other.StartRetentionTime != 0F) {
            StartRetentionTime = other.StartRetentionTime;
          }
          if (other.EndRetentionTime != 0F) {
            EndRetentionTime = other.EndRetentionTime;
          }
          if (other.driftTime_ != null) {
            if (driftTime_ == null) {
              driftTime_ = new global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalDouble();
            }
            DriftTime.MergeFrom(other.DriftTime);
          }
          if (other.driftTimeWindow_ != null) {
            if (driftTimeWindow_ == null) {
              driftTimeWindow_ = new global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalDouble();
            }
            DriftTimeWindow.MergeFrom(other.DriftTimeWindow);
          }
          if (other.Area != 0F) {
            Area = other.Area;
          }
          if (other.BackgroundArea != 0F) {
            BackgroundArea = other.BackgroundArea;
          }
          if (other.Height != 0F) {
            Height = other.Height;
          }
          if (other.Fwhm != 0F) {
            Fwhm = other.Fwhm;
          }
          if (other.IsFwhmDegenerate != false) {
            IsFwhmDegenerate = other.IsFwhmDegenerate;
          }
          if (other.Truncated != 0) {
            Truncated = other.Truncated;
          }
          if (other.Identified != 0) {
            Identified = other.Identified;
          }
          if (other.Rank != 0) {
            Rank = other.Rank;
          }
          if (other.RankByLevel != 0) {
            RankByLevel = other.RankByLevel;
          }
          if (other.pointsAcrossPeak_ != null) {
            if (pointsAcrossPeak_ == null) {
              pointsAcrossPeak_ = new global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalInt();
            }
            PointsAcrossPeak.MergeFrom(other.PointsAcrossPeak);
          }
          if (other.UserSet != 0) {
            UserSet = other.UserSet;
          }
          if (other.OptimizationStep != 0) {
            OptimizationStep = other.OptimizationStep;
          }
          if (other.annotations_ != null) {
            if (annotations_ == null) {
              annotations_ = new global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.Annotations();
            }
            Annotations.MergeFrom(other.Annotations);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 8: {
                ReplicateIndex = input.ReadInt32();
                break;
              }
              case 16: {
                FileIndexInReplicate = input.ReadInt32();
                break;
              }
              case 26: {
                if (massError_ == null) {
                  massError_ = new global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalFloat();
                }
                input.ReadMessage(massError_);
                break;
              }
              case 37: {
                RetentionTime = input.ReadFloat();
                break;
              }
              case 45: {
                StartRetentionTime = input.ReadFloat();
                break;
              }
              case 53: {
                EndRetentionTime = input.ReadFloat();
                break;
              }
              case 58: {
                if (driftTime_ == null) {
                  driftTime_ = new global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalDouble();
                }
                input.ReadMessage(driftTime_);
                break;
              }
              case 66: {
                if (driftTimeWindow_ == null) {
                  driftTimeWindow_ = new global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalDouble();
                }
                input.ReadMessage(driftTimeWindow_);
                break;
              }
              case 77: {
                Area = input.ReadFloat();
                break;
              }
              case 85: {
                BackgroundArea = input.ReadFloat();
                break;
              }
              case 93: {
                Height = input.ReadFloat();
                break;
              }
              case 101: {
                Fwhm = input.ReadFloat();
                break;
              }
              case 104: {
                IsFwhmDegenerate = input.ReadBool();
                break;
              }
              case 112: {
                truncated_ = (global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalBool) input.ReadEnum();
                break;
              }
              case 120: {
                identified_ = (global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.PeakIdentification) input.ReadEnum();
                break;
              }
              case 128: {
                Rank = input.ReadInt32();
                break;
              }
              case 136: {
                RankByLevel = input.ReadInt32();
                break;
              }
              case 146: {
                if (pointsAcrossPeak_ == null) {
                  pointsAcrossPeak_ = new global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalInt();
                }
                input.ReadMessage(pointsAcrossPeak_);
                break;
              }
              case 152: {
                userSet_ = (global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.UserSet) input.ReadEnum();
                break;
              }
              case 184: {
                OptimizationStep = input.ReadSInt32();
                break;
              }
              case 194: {
                if (annotations_ == null) {
                  annotations_ = new global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.Annotations();
                }
                input.ReadMessage(annotations_);
                break;
              }
            }
          }
        }

      }

      public sealed partial class TransitionResults : pb::IMessage<TransitionResults> {
        private static readonly pb::MessageParser<TransitionResults> _parser = new pb::MessageParser<TransitionResults>(() => new TransitionResults());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<TransitionResults> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TransitionResults() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TransitionResults(TransitionResults other) : this() {
          peaks_ = other.peaks_.Clone();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TransitionResults Clone() {
          return new TransitionResults(this);
        }

        /// <summary>Field number for the "peaks" field.</summary>
        public const int PeaksFieldNumber = 1;
        private static readonly pb::FieldCodec<global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.TransitionPeak> _repeated_peaks_codec
            = pb::FieldCodec.ForMessage(10, global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.TransitionPeak.Parser);
        private readonly pbc::RepeatedField<global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.TransitionPeak> peaks_ = new pbc::RepeatedField<global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.TransitionPeak>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.TransitionPeak> Peaks {
          get { return peaks_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as TransitionResults);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(TransitionResults other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!peaks_.Equals(other.peaks_)) return false;
          return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= peaks_.GetHashCode();
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          peaks_.WriteTo(output, _repeated_peaks_codec);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += peaks_.CalculateSize(_repeated_peaks_codec);
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(TransitionResults other) {
          if (other == null) {
            return;
          }
          peaks_.Add(other.peaks_);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 10: {
                peaks_.AddEntriesFrom(input, _repeated_peaks_codec);
                break;
              }
            }
          }
        }

      }

      public sealed partial class Transition : pb::IMessage<Transition> {
        private static readonly pb::MessageParser<Transition> _parser = new pb::MessageParser<Transition>(() => new Transition());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Transition> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Transition() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Transition(Transition other) : this() {
          Formula = other.formula_ != null ? other.Formula.Clone() : null;
          AverageMass = other.averageMass_ != null ? other.AverageMass.Clone() : null;
          MonoMass = other.monoMass_ != null ? other.MonoMass.Clone() : null;
          CustomIonName = other.customIonName_ != null ? other.CustomIonName.Clone() : null;
          MeasuredIonName = other.measuredIonName_ != null ? other.MeasuredIonName.Clone() : null;
          DecoyMassShift = other.decoyMassShift_ != null ? other.DecoyMassShift.Clone() : null;
          massIndex_ = other.massIndex_;
          IsotopeDistRank = other.isotopeDistRank_ != null ? other.IsotopeDistRank.Clone() : null;
          IsotopeDistProportion = other.isotopeDistProportion_ != null ? other.IsotopeDistProportion.Clone() : null;
          fragmentOrdinal_ = other.fragmentOrdinal_;
          calcNeutralMass_ = other.calcNeutralMass_;
          charge_ = other.charge_;
          cleavageAa_ = other.cleavageAa_;
          lostMass_ = other.lostMass_;
          Annotations = other.annotations_ != null ? other.Annotations.Clone() : null;
          precursorMz_ = other.precursorMz_;
          productMz_ = other.productMz_;
          CollisionEnergy = other.collisionEnergy_ != null ? other.CollisionEnergy.Clone() : null;
          DeclusteringPotential = other.declusteringPotential_ != null ? other.DeclusteringPotential.Clone() : null;
          losses_ = other.losses_.Clone();
          fragmentType_ = other.fragmentType_;
          LibInfo = other.libInfo_ != null ? other.LibInfo.Clone() : null;
          Results = other.results_ != null ? other.Results.Clone() : null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Transition Clone() {
          return new Transition(this);
        }

        /// <summary>Field number for the "formula" field.</summary>
        public const int FormulaFieldNumber = 1;
        private global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalString formula_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalString Formula {
          get { return formula_; }
          set {
            formula_ = value;
          }
        }

        /// <summary>Field number for the "averageMass" field.</summary>
        public const int AverageMassFieldNumber = 2;
        private global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalDouble averageMass_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalDouble AverageMass {
          get { return averageMass_; }
          set {
            averageMass_ = value;
          }
        }

        /// <summary>Field number for the "monoMass" field.</summary>
        public const int MonoMassFieldNumber = 3;
        private global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalDouble monoMass_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalDouble MonoMass {
          get { return monoMass_; }
          set {
            monoMass_ = value;
          }
        }

        /// <summary>Field number for the "custom_ion_name" field.</summary>
        public const int CustomIonNameFieldNumber = 6;
        private global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalString customIonName_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalString CustomIonName {
          get { return customIonName_; }
          set {
            customIonName_ = value;
          }
        }

        /// <summary>Field number for the "measured_ion_name" field.</summary>
        public const int MeasuredIonNameFieldNumber = 7;
        private global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalString measuredIonName_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalString MeasuredIonName {
          get { return measuredIonName_; }
          set {
            measuredIonName_ = value;
          }
        }

        /// <summary>Field number for the "decoyMassShift" field.</summary>
        public const int DecoyMassShiftFieldNumber = 8;
        private global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalInt decoyMassShift_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalInt DecoyMassShift {
          get { return decoyMassShift_; }
          set {
            decoyMassShift_ = value;
          }
        }

        /// <summary>Field number for the "massIndex" field.</summary>
        public const int MassIndexFieldNumber = 9;
        private int massIndex_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int MassIndex {
          get { return massIndex_; }
          set {
            massIndex_ = value;
          }
        }

        /// <summary>Field number for the "isotopeDistRank" field.</summary>
        public const int IsotopeDistRankFieldNumber = 11;
        private global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalInt isotopeDistRank_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalInt IsotopeDistRank {
          get { return isotopeDistRank_; }
          set {
            isotopeDistRank_ = value;
          }
        }

        /// <summary>Field number for the "isotopeDistProportion" field.</summary>
        public const int IsotopeDistProportionFieldNumber = 12;
        private global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalFloat isotopeDistProportion_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalFloat IsotopeDistProportion {
          get { return isotopeDistProportion_; }
          set {
            isotopeDistProportion_ = value;
          }
        }

        /// <summary>Field number for the "fragmentOrdinal" field.</summary>
        public const int FragmentOrdinalFieldNumber = 13;
        private int fragmentOrdinal_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int FragmentOrdinal {
          get { return fragmentOrdinal_; }
          set {
            fragmentOrdinal_ = value;
          }
        }

        /// <summary>Field number for the "calc_neutral_mass" field.</summary>
        public const int CalcNeutralMassFieldNumber = 14;
        private double calcNeutralMass_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double CalcNeutralMass {
          get { return calcNeutralMass_; }
          set {
            calcNeutralMass_ = value;
          }
        }

        /// <summary>Field number for the "charge" field.</summary>
        public const int ChargeFieldNumber = 15;
        private int charge_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Charge {
          get { return charge_; }
          set {
            charge_ = value;
          }
        }

        /// <summary>Field number for the "cleavageAa" field.</summary>
        public const int CleavageAaFieldNumber = 16;
        private int cleavageAa_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CleavageAa {
          get { return cleavageAa_; }
          set {
            cleavageAa_ = value;
          }
        }

        /// <summary>Field number for the "lostMass" field.</summary>
        public const int LostMassFieldNumber = 17;
        private double lostMass_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double LostMass {
          get { return lostMass_; }
          set {
            lostMass_ = value;
          }
        }

        /// <summary>Field number for the "annotations" field.</summary>
        public const int AnnotationsFieldNumber = 18;
        private global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.Annotations annotations_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.Annotations Annotations {
          get { return annotations_; }
          set {
            annotations_ = value;
          }
        }

        /// <summary>Field number for the "precursorMz" field.</summary>
        public const int PrecursorMzFieldNumber = 19;
        private double precursorMz_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double PrecursorMz {
          get { return precursorMz_; }
          set {
            precursorMz_ = value;
          }
        }

        /// <summary>Field number for the "productMz" field.</summary>
        public const int ProductMzFieldNumber = 20;
        private double productMz_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double ProductMz {
          get { return productMz_; }
          set {
            productMz_ = value;
          }
        }

        /// <summary>Field number for the "collisionEnergy" field.</summary>
        public const int CollisionEnergyFieldNumber = 21;
        private global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalDouble collisionEnergy_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalDouble CollisionEnergy {
          get { return collisionEnergy_; }
          set {
            collisionEnergy_ = value;
          }
        }

        /// <summary>Field number for the "declusteringPotential" field.</summary>
        public const int DeclusteringPotentialFieldNumber = 22;
        private global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalDouble declusteringPotential_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalDouble DeclusteringPotential {
          get { return declusteringPotential_; }
          set {
            declusteringPotential_ = value;
          }
        }

        /// <summary>Field number for the "losses" field.</summary>
        public const int LossesFieldNumber = 23;
        private static readonly pb::FieldCodec<global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.TransitionLoss> _repeated_losses_codec
            = pb::FieldCodec.ForMessage(186, global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.TransitionLoss.Parser);
        private readonly pbc::RepeatedField<global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.TransitionLoss> losses_ = new pbc::RepeatedField<global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.TransitionLoss>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.TransitionLoss> Losses {
          get { return losses_; }
        }

        /// <summary>Field number for the "fragmentType" field.</summary>
        public const int FragmentTypeFieldNumber = 24;
        private global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.IonType fragmentType_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.IonType FragmentType {
          get { return fragmentType_; }
          set {
            fragmentType_ = value;
          }
        }

        /// <summary>Field number for the "libInfo" field.</summary>
        public const int LibInfoFieldNumber = 25;
        private global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.TransitionLibInfo libInfo_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.TransitionLibInfo LibInfo {
          get { return libInfo_; }
          set {
            libInfo_ = value;
          }
        }

        /// <summary>Field number for the "results" field.</summary>
        public const int ResultsFieldNumber = 26;
        private global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.TransitionResults results_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.TransitionResults Results {
          get { return results_; }
          set {
            results_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Transition);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Transition other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Formula, other.Formula)) return false;
          if (!object.Equals(AverageMass, other.AverageMass)) return false;
          if (!object.Equals(MonoMass, other.MonoMass)) return false;
          if (!object.Equals(CustomIonName, other.CustomIonName)) return false;
          if (!object.Equals(MeasuredIonName, other.MeasuredIonName)) return false;
          if (!object.Equals(DecoyMassShift, other.DecoyMassShift)) return false;
          if (MassIndex != other.MassIndex) return false;
          if (!object.Equals(IsotopeDistRank, other.IsotopeDistRank)) return false;
          if (!object.Equals(IsotopeDistProportion, other.IsotopeDistProportion)) return false;
          if (FragmentOrdinal != other.FragmentOrdinal) return false;
          if (CalcNeutralMass != other.CalcNeutralMass) return false;
          if (Charge != other.Charge) return false;
          if (CleavageAa != other.CleavageAa) return false;
          if (LostMass != other.LostMass) return false;
          if (!object.Equals(Annotations, other.Annotations)) return false;
          if (PrecursorMz != other.PrecursorMz) return false;
          if (ProductMz != other.ProductMz) return false;
          if (!object.Equals(CollisionEnergy, other.CollisionEnergy)) return false;
          if (!object.Equals(DeclusteringPotential, other.DeclusteringPotential)) return false;
          if(!losses_.Equals(other.losses_)) return false;
          if (FragmentType != other.FragmentType) return false;
          if (!object.Equals(LibInfo, other.LibInfo)) return false;
          if (!object.Equals(Results, other.Results)) return false;
          return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (formula_ != null) hash ^= Formula.GetHashCode();
          if (averageMass_ != null) hash ^= AverageMass.GetHashCode();
          if (monoMass_ != null) hash ^= MonoMass.GetHashCode();
          if (customIonName_ != null) hash ^= CustomIonName.GetHashCode();
          if (measuredIonName_ != null) hash ^= MeasuredIonName.GetHashCode();
          if (decoyMassShift_ != null) hash ^= DecoyMassShift.GetHashCode();
          if (MassIndex != 0) hash ^= MassIndex.GetHashCode();
          if (isotopeDistRank_ != null) hash ^= IsotopeDistRank.GetHashCode();
          if (isotopeDistProportion_ != null) hash ^= IsotopeDistProportion.GetHashCode();
          if (FragmentOrdinal != 0) hash ^= FragmentOrdinal.GetHashCode();
          if (CalcNeutralMass != 0D) hash ^= CalcNeutralMass.GetHashCode();
          if (Charge != 0) hash ^= Charge.GetHashCode();
          if (CleavageAa != 0) hash ^= CleavageAa.GetHashCode();
          if (LostMass != 0D) hash ^= LostMass.GetHashCode();
          if (annotations_ != null) hash ^= Annotations.GetHashCode();
          if (PrecursorMz != 0D) hash ^= PrecursorMz.GetHashCode();
          if (ProductMz != 0D) hash ^= ProductMz.GetHashCode();
          if (collisionEnergy_ != null) hash ^= CollisionEnergy.GetHashCode();
          if (declusteringPotential_ != null) hash ^= DeclusteringPotential.GetHashCode();
          hash ^= losses_.GetHashCode();
          if (FragmentType != 0) hash ^= FragmentType.GetHashCode();
          if (libInfo_ != null) hash ^= LibInfo.GetHashCode();
          if (results_ != null) hash ^= Results.GetHashCode();
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (formula_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Formula);
          }
          if (averageMass_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(AverageMass);
          }
          if (monoMass_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(MonoMass);
          }
          if (customIonName_ != null) {
            output.WriteRawTag(50);
            output.WriteMessage(CustomIonName);
          }
          if (measuredIonName_ != null) {
            output.WriteRawTag(58);
            output.WriteMessage(MeasuredIonName);
          }
          if (decoyMassShift_ != null) {
            output.WriteRawTag(66);
            output.WriteMessage(DecoyMassShift);
          }
          if (MassIndex != 0) {
            output.WriteRawTag(72);
            output.WriteSInt32(MassIndex);
          }
          if (isotopeDistRank_ != null) {
            output.WriteRawTag(90);
            output.WriteMessage(IsotopeDistRank);
          }
          if (isotopeDistProportion_ != null) {
            output.WriteRawTag(98);
            output.WriteMessage(IsotopeDistProportion);
          }
          if (FragmentOrdinal != 0) {
            output.WriteRawTag(104);
            output.WriteSInt32(FragmentOrdinal);
          }
          if (CalcNeutralMass != 0D) {
            output.WriteRawTag(113);
            output.WriteDouble(CalcNeutralMass);
          }
          if (Charge != 0) {
            output.WriteRawTag(120);
            output.WriteSInt32(Charge);
          }
          if (CleavageAa != 0) {
            output.WriteRawTag(128, 1);
            output.WriteInt32(CleavageAa);
          }
          if (LostMass != 0D) {
            output.WriteRawTag(137, 1);
            output.WriteDouble(LostMass);
          }
          if (annotations_ != null) {
            output.WriteRawTag(146, 1);
            output.WriteMessage(Annotations);
          }
          if (PrecursorMz != 0D) {
            output.WriteRawTag(153, 1);
            output.WriteDouble(PrecursorMz);
          }
          if (ProductMz != 0D) {
            output.WriteRawTag(161, 1);
            output.WriteDouble(ProductMz);
          }
          if (collisionEnergy_ != null) {
            output.WriteRawTag(170, 1);
            output.WriteMessage(CollisionEnergy);
          }
          if (declusteringPotential_ != null) {
            output.WriteRawTag(178, 1);
            output.WriteMessage(DeclusteringPotential);
          }
          losses_.WriteTo(output, _repeated_losses_codec);
          if (FragmentType != 0) {
            output.WriteRawTag(192, 1);
            output.WriteEnum((int) FragmentType);
          }
          if (libInfo_ != null) {
            output.WriteRawTag(202, 1);
            output.WriteMessage(LibInfo);
          }
          if (results_ != null) {
            output.WriteRawTag(210, 1);
            output.WriteMessage(Results);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (formula_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Formula);
          }
          if (averageMass_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(AverageMass);
          }
          if (monoMass_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(MonoMass);
          }
          if (customIonName_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(CustomIonName);
          }
          if (measuredIonName_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(MeasuredIonName);
          }
          if (decoyMassShift_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(DecoyMassShift);
          }
          if (MassIndex != 0) {
            size += 1 + pb::CodedOutputStream.ComputeSInt32Size(MassIndex);
          }
          if (isotopeDistRank_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(IsotopeDistRank);
          }
          if (isotopeDistProportion_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(IsotopeDistProportion);
          }
          if (FragmentOrdinal != 0) {
            size += 1 + pb::CodedOutputStream.ComputeSInt32Size(FragmentOrdinal);
          }
          if (CalcNeutralMass != 0D) {
            size += 1 + 8;
          }
          if (Charge != 0) {
            size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Charge);
          }
          if (CleavageAa != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(CleavageAa);
          }
          if (LostMass != 0D) {
            size += 2 + 8;
          }
          if (annotations_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(Annotations);
          }
          if (PrecursorMz != 0D) {
            size += 2 + 8;
          }
          if (ProductMz != 0D) {
            size += 2 + 8;
          }
          if (collisionEnergy_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(CollisionEnergy);
          }
          if (declusteringPotential_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(DeclusteringPotential);
          }
          size += losses_.CalculateSize(_repeated_losses_codec);
          if (FragmentType != 0) {
            size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) FragmentType);
          }
          if (libInfo_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(LibInfo);
          }
          if (results_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(Results);
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Transition other) {
          if (other == null) {
            return;
          }
          if (other.formula_ != null) {
            if (formula_ == null) {
              formula_ = new global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalString();
            }
            Formula.MergeFrom(other.Formula);
          }
          if (other.averageMass_ != null) {
            if (averageMass_ == null) {
              averageMass_ = new global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalDouble();
            }
            AverageMass.MergeFrom(other.AverageMass);
          }
          if (other.monoMass_ != null) {
            if (monoMass_ == null) {
              monoMass_ = new global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalDouble();
            }
            MonoMass.MergeFrom(other.MonoMass);
          }
          if (other.customIonName_ != null) {
            if (customIonName_ == null) {
              customIonName_ = new global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalString();
            }
            CustomIonName.MergeFrom(other.CustomIonName);
          }
          if (other.measuredIonName_ != null) {
            if (measuredIonName_ == null) {
              measuredIonName_ = new global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalString();
            }
            MeasuredIonName.MergeFrom(other.MeasuredIonName);
          }
          if (other.decoyMassShift_ != null) {
            if (decoyMassShift_ == null) {
              decoyMassShift_ = new global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalInt();
            }
            DecoyMassShift.MergeFrom(other.DecoyMassShift);
          }
          if (other.MassIndex != 0) {
            MassIndex = other.MassIndex;
          }
          if (other.isotopeDistRank_ != null) {
            if (isotopeDistRank_ == null) {
              isotopeDistRank_ = new global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalInt();
            }
            IsotopeDistRank.MergeFrom(other.IsotopeDistRank);
          }
          if (other.isotopeDistProportion_ != null) {
            if (isotopeDistProportion_ == null) {
              isotopeDistProportion_ = new global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalFloat();
            }
            IsotopeDistProportion.MergeFrom(other.IsotopeDistProportion);
          }
          if (other.FragmentOrdinal != 0) {
            FragmentOrdinal = other.FragmentOrdinal;
          }
          if (other.CalcNeutralMass != 0D) {
            CalcNeutralMass = other.CalcNeutralMass;
          }
          if (other.Charge != 0) {
            Charge = other.Charge;
          }
          if (other.CleavageAa != 0) {
            CleavageAa = other.CleavageAa;
          }
          if (other.LostMass != 0D) {
            LostMass = other.LostMass;
          }
          if (other.annotations_ != null) {
            if (annotations_ == null) {
              annotations_ = new global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.Annotations();
            }
            Annotations.MergeFrom(other.Annotations);
          }
          if (other.PrecursorMz != 0D) {
            PrecursorMz = other.PrecursorMz;
          }
          if (other.ProductMz != 0D) {
            ProductMz = other.ProductMz;
          }
          if (other.collisionEnergy_ != null) {
            if (collisionEnergy_ == null) {
              collisionEnergy_ = new global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalDouble();
            }
            CollisionEnergy.MergeFrom(other.CollisionEnergy);
          }
          if (other.declusteringPotential_ != null) {
            if (declusteringPotential_ == null) {
              declusteringPotential_ = new global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalDouble();
            }
            DeclusteringPotential.MergeFrom(other.DeclusteringPotential);
          }
          losses_.Add(other.losses_);
          if (other.FragmentType != 0) {
            FragmentType = other.FragmentType;
          }
          if (other.libInfo_ != null) {
            if (libInfo_ == null) {
              libInfo_ = new global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.TransitionLibInfo();
            }
            LibInfo.MergeFrom(other.LibInfo);
          }
          if (other.results_ != null) {
            if (results_ == null) {
              results_ = new global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.TransitionResults();
            }
            Results.MergeFrom(other.Results);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 10: {
                if (formula_ == null) {
                  formula_ = new global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalString();
                }
                input.ReadMessage(formula_);
                break;
              }
              case 18: {
                if (averageMass_ == null) {
                  averageMass_ = new global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalDouble();
                }
                input.ReadMessage(averageMass_);
                break;
              }
              case 26: {
                if (monoMass_ == null) {
                  monoMass_ = new global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalDouble();
                }
                input.ReadMessage(monoMass_);
                break;
              }
              case 50: {
                if (customIonName_ == null) {
                  customIonName_ = new global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalString();
                }
                input.ReadMessage(customIonName_);
                break;
              }
              case 58: {
                if (measuredIonName_ == null) {
                  measuredIonName_ = new global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalString();
                }
                input.ReadMessage(measuredIonName_);
                break;
              }
              case 66: {
                if (decoyMassShift_ == null) {
                  decoyMassShift_ = new global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalInt();
                }
                input.ReadMessage(decoyMassShift_);
                break;
              }
              case 72: {
                MassIndex = input.ReadSInt32();
                break;
              }
              case 90: {
                if (isotopeDistRank_ == null) {
                  isotopeDistRank_ = new global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalInt();
                }
                input.ReadMessage(isotopeDistRank_);
                break;
              }
              case 98: {
                if (isotopeDistProportion_ == null) {
                  isotopeDistProportion_ = new global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalFloat();
                }
                input.ReadMessage(isotopeDistProportion_);
                break;
              }
              case 104: {
                FragmentOrdinal = input.ReadSInt32();
                break;
              }
              case 113: {
                CalcNeutralMass = input.ReadDouble();
                break;
              }
              case 120: {
                Charge = input.ReadSInt32();
                break;
              }
              case 128: {
                CleavageAa = input.ReadInt32();
                break;
              }
              case 137: {
                LostMass = input.ReadDouble();
                break;
              }
              case 146: {
                if (annotations_ == null) {
                  annotations_ = new global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.Annotations();
                }
                input.ReadMessage(annotations_);
                break;
              }
              case 153: {
                PrecursorMz = input.ReadDouble();
                break;
              }
              case 161: {
                ProductMz = input.ReadDouble();
                break;
              }
              case 170: {
                if (collisionEnergy_ == null) {
                  collisionEnergy_ = new global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalDouble();
                }
                input.ReadMessage(collisionEnergy_);
                break;
              }
              case 178: {
                if (declusteringPotential_ == null) {
                  declusteringPotential_ = new global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.OptionalDouble();
                }
                input.ReadMessage(declusteringPotential_);
                break;
              }
              case 186: {
                losses_.AddEntriesFrom(input, _repeated_losses_codec);
                break;
              }
              case 192: {
                fragmentType_ = (global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.IonType) input.ReadEnum();
                break;
              }
              case 202: {
                if (libInfo_ == null) {
                  libInfo_ = new global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.TransitionLibInfo();
                }
                input.ReadMessage(libInfo_);
                break;
              }
              case 210: {
                if (results_ == null) {
                  results_ = new global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.TransitionResults();
                }
                input.ReadMessage(results_);
                break;
              }
            }
          }
        }

      }

      public sealed partial class OptionalFloat : pb::IMessage<OptionalFloat> {
        private static readonly pb::MessageParser<OptionalFloat> _parser = new pb::MessageParser<OptionalFloat>(() => new OptionalFloat());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<OptionalFloat> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Descriptor.NestedTypes[5]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public OptionalFloat() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public OptionalFloat(OptionalFloat other) : this() {
          value_ = other.value_;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public OptionalFloat Clone() {
          return new OptionalFloat(this);
        }

        /// <summary>Field number for the "value" field.</summary>
        public const int ValueFieldNumber = 1;
        private float value_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float Value {
          get { return value_; }
          set {
            value_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as OptionalFloat);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(OptionalFloat other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Value != other.Value) return false;
          return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Value != 0F) hash ^= Value.GetHashCode();
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Value != 0F) {
            output.WriteRawTag(13);
            output.WriteFloat(Value);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Value != 0F) {
            size += 1 + 4;
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(OptionalFloat other) {
          if (other == null) {
            return;
          }
          if (other.Value != 0F) {
            Value = other.Value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 13: {
                Value = input.ReadFloat();
                break;
              }
            }
          }
        }

      }

      public sealed partial class OptionalDouble : pb::IMessage<OptionalDouble> {
        private static readonly pb::MessageParser<OptionalDouble> _parser = new pb::MessageParser<OptionalDouble>(() => new OptionalDouble());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<OptionalDouble> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Descriptor.NestedTypes[6]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public OptionalDouble() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public OptionalDouble(OptionalDouble other) : this() {
          value_ = other.value_;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public OptionalDouble Clone() {
          return new OptionalDouble(this);
        }

        /// <summary>Field number for the "value" field.</summary>
        public const int ValueFieldNumber = 1;
        private double value_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double Value {
          get { return value_; }
          set {
            value_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as OptionalDouble);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(OptionalDouble other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Value != other.Value) return false;
          return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Value != 0D) hash ^= Value.GetHashCode();
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Value != 0D) {
            output.WriteRawTag(9);
            output.WriteDouble(Value);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Value != 0D) {
            size += 1 + 8;
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(OptionalDouble other) {
          if (other == null) {
            return;
          }
          if (other.Value != 0D) {
            Value = other.Value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 9: {
                Value = input.ReadDouble();
                break;
              }
            }
          }
        }

      }

      public sealed partial class OptionalInt : pb::IMessage<OptionalInt> {
        private static readonly pb::MessageParser<OptionalInt> _parser = new pb::MessageParser<OptionalInt>(() => new OptionalInt());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<OptionalInt> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Descriptor.NestedTypes[7]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public OptionalInt() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public OptionalInt(OptionalInt other) : this() {
          value_ = other.value_;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public OptionalInt Clone() {
          return new OptionalInt(this);
        }

        /// <summary>Field number for the "value" field.</summary>
        public const int ValueFieldNumber = 1;
        private int value_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Value {
          get { return value_; }
          set {
            value_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as OptionalInt);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(OptionalInt other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Value != other.Value) return false;
          return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Value != 0) hash ^= Value.GetHashCode();
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Value != 0) {
            output.WriteRawTag(8);
            output.WriteSInt32(Value);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Value != 0) {
            size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Value);
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(OptionalInt other) {
          if (other == null) {
            return;
          }
          if (other.Value != 0) {
            Value = other.Value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 8: {
                Value = input.ReadSInt32();
                break;
              }
            }
          }
        }

      }

      public sealed partial class OptionalString : pb::IMessage<OptionalString> {
        private static readonly pb::MessageParser<OptionalString> _parser = new pb::MessageParser<OptionalString>(() => new OptionalString());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<OptionalString> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Descriptor.NestedTypes[8]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public OptionalString() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public OptionalString(OptionalString other) : this() {
          value_ = other.value_;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public OptionalString Clone() {
          return new OptionalString(this);
        }

        /// <summary>Field number for the "value" field.</summary>
        public const int ValueFieldNumber = 1;
        private string value_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Value {
          get { return value_; }
          set {
            value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as OptionalString);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(OptionalString other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Value != other.Value) return false;
          return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Value.Length != 0) hash ^= Value.GetHashCode();
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Value.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Value);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Value.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(OptionalString other) {
          if (other == null) {
            return;
          }
          if (other.Value.Length != 0) {
            Value = other.Value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 10: {
                Value = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class TransitionLoss : pb::IMessage<TransitionLoss> {
        private static readonly pb::MessageParser<TransitionLoss> _parser = new pb::MessageParser<TransitionLoss>(() => new TransitionLoss());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<TransitionLoss> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Descriptor.NestedTypes[9]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TransitionLoss() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TransitionLoss(TransitionLoss other) : this() {
          formula_ = other.formula_;
          monoisotopicMass_ = other.monoisotopicMass_;
          averageMass_ = other.averageMass_;
          lossInclusion_ = other.lossInclusion_;
          modificationName_ = other.modificationName_;
          lossIndex_ = other.lossIndex_;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TransitionLoss Clone() {
          return new TransitionLoss(this);
        }

        /// <summary>Field number for the "formula" field.</summary>
        public const int FormulaFieldNumber = 1;
        private string formula_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Formula {
          get { return formula_; }
          set {
            formula_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "monoisotopicMass" field.</summary>
        public const int MonoisotopicMassFieldNumber = 2;
        private double monoisotopicMass_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double MonoisotopicMass {
          get { return monoisotopicMass_; }
          set {
            monoisotopicMass_ = value;
          }
        }

        /// <summary>Field number for the "averageMass" field.</summary>
        public const int AverageMassFieldNumber = 3;
        private double averageMass_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double AverageMass {
          get { return averageMass_; }
          set {
            averageMass_ = value;
          }
        }

        /// <summary>Field number for the "lossInclusion" field.</summary>
        public const int LossInclusionFieldNumber = 4;
        private global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.LossInclusion lossInclusion_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.LossInclusion LossInclusion {
          get { return lossInclusion_; }
          set {
            lossInclusion_ = value;
          }
        }

        /// <summary>Field number for the "modificationName" field.</summary>
        public const int ModificationNameFieldNumber = 5;
        private string modificationName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ModificationName {
          get { return modificationName_; }
          set {
            modificationName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "lossIndex" field.</summary>
        public const int LossIndexFieldNumber = 6;
        private int lossIndex_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int LossIndex {
          get { return lossIndex_; }
          set {
            lossIndex_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as TransitionLoss);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(TransitionLoss other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Formula != other.Formula) return false;
          if (MonoisotopicMass != other.MonoisotopicMass) return false;
          if (AverageMass != other.AverageMass) return false;
          if (LossInclusion != other.LossInclusion) return false;
          if (ModificationName != other.ModificationName) return false;
          if (LossIndex != other.LossIndex) return false;
          return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Formula.Length != 0) hash ^= Formula.GetHashCode();
          if (MonoisotopicMass != 0D) hash ^= MonoisotopicMass.GetHashCode();
          if (AverageMass != 0D) hash ^= AverageMass.GetHashCode();
          if (LossInclusion != 0) hash ^= LossInclusion.GetHashCode();
          if (ModificationName.Length != 0) hash ^= ModificationName.GetHashCode();
          if (LossIndex != 0) hash ^= LossIndex.GetHashCode();
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Formula.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Formula);
          }
          if (MonoisotopicMass != 0D) {
            output.WriteRawTag(17);
            output.WriteDouble(MonoisotopicMass);
          }
          if (AverageMass != 0D) {
            output.WriteRawTag(25);
            output.WriteDouble(AverageMass);
          }
          if (LossInclusion != 0) {
            output.WriteRawTag(32);
            output.WriteEnum((int) LossInclusion);
          }
          if (ModificationName.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(ModificationName);
          }
          if (LossIndex != 0) {
            output.WriteRawTag(48);
            output.WriteInt32(LossIndex);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Formula.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Formula);
          }
          if (MonoisotopicMass != 0D) {
            size += 1 + 8;
          }
          if (AverageMass != 0D) {
            size += 1 + 8;
          }
          if (LossInclusion != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) LossInclusion);
          }
          if (ModificationName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ModificationName);
          }
          if (LossIndex != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(LossIndex);
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(TransitionLoss other) {
          if (other == null) {
            return;
          }
          if (other.Formula.Length != 0) {
            Formula = other.Formula;
          }
          if (other.MonoisotopicMass != 0D) {
            MonoisotopicMass = other.MonoisotopicMass;
          }
          if (other.AverageMass != 0D) {
            AverageMass = other.AverageMass;
          }
          if (other.LossInclusion != 0) {
            LossInclusion = other.LossInclusion;
          }
          if (other.ModificationName.Length != 0) {
            ModificationName = other.ModificationName;
          }
          if (other.LossIndex != 0) {
            LossIndex = other.LossIndex;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 10: {
                Formula = input.ReadString();
                break;
              }
              case 17: {
                MonoisotopicMass = input.ReadDouble();
                break;
              }
              case 25: {
                AverageMass = input.ReadDouble();
                break;
              }
              case 32: {
                lossInclusion_ = (global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.LossInclusion) input.ReadEnum();
                break;
              }
              case 42: {
                ModificationName = input.ReadString();
                break;
              }
              case 48: {
                LossIndex = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

      public sealed partial class TransitionLibInfo : pb::IMessage<TransitionLibInfo> {
        private static readonly pb::MessageParser<TransitionLibInfo> _parser = new pb::MessageParser<TransitionLibInfo>(() => new TransitionLibInfo());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<TransitionLibInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Descriptor.NestedTypes[10]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TransitionLibInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TransitionLibInfo(TransitionLibInfo other) : this() {
          rank_ = other.rank_;
          intensity_ = other.intensity_;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TransitionLibInfo Clone() {
          return new TransitionLibInfo(this);
        }

        /// <summary>Field number for the "rank" field.</summary>
        public const int RankFieldNumber = 1;
        private int rank_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Rank {
          get { return rank_; }
          set {
            rank_ = value;
          }
        }

        /// <summary>Field number for the "intensity" field.</summary>
        public const int IntensityFieldNumber = 2;
        private float intensity_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float Intensity {
          get { return intensity_; }
          set {
            intensity_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as TransitionLibInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(TransitionLibInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Rank != other.Rank) return false;
          if (Intensity != other.Intensity) return false;
          return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Rank != 0) hash ^= Rank.GetHashCode();
          if (Intensity != 0F) hash ^= Intensity.GetHashCode();
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Rank != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Rank);
          }
          if (Intensity != 0F) {
            output.WriteRawTag(21);
            output.WriteFloat(Intensity);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Rank != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rank);
          }
          if (Intensity != 0F) {
            size += 1 + 4;
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(TransitionLibInfo other) {
          if (other == null) {
            return;
          }
          if (other.Rank != 0) {
            Rank = other.Rank;
          }
          if (other.Intensity != 0F) {
            Intensity = other.Intensity;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 8: {
                Rank = input.ReadInt32();
                break;
              }
              case 21: {
                Intensity = input.ReadFloat();
                break;
              }
            }
          }
        }

      }

      public sealed partial class TransitionData : pb::IMessage<TransitionData> {
        private static readonly pb::MessageParser<TransitionData> _parser = new pb::MessageParser<TransitionData>(() => new TransitionData());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<TransitionData> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Descriptor.NestedTypes[11]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TransitionData() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TransitionData(TransitionData other) : this() {
          transitions_ = other.transitions_.Clone();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TransitionData Clone() {
          return new TransitionData(this);
        }

        /// <summary>Field number for the "transitions" field.</summary>
        public const int TransitionsFieldNumber = 1;
        private static readonly pb::FieldCodec<global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.Transition> _repeated_transitions_codec
            = pb::FieldCodec.ForMessage(10, global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.Transition.Parser);
        private readonly pbc::RepeatedField<global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.Transition> transitions_ = new pbc::RepeatedField<global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.Transition>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::pwiz.Skyline.Model.Serialization.SkylineDocumentProto.Types.Transition> Transitions {
          get { return transitions_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as TransitionData);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(TransitionData other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!transitions_.Equals(other.transitions_)) return false;
          return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= transitions_.GetHashCode();
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          transitions_.WriteTo(output, _repeated_transitions_codec);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += transitions_.CalculateSize(_repeated_transitions_codec);
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(TransitionData other) {
          if (other == null) {
            return;
          }
          transitions_.Add(other.transitions_);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 10: {
                transitions_.AddEntriesFrom(input, _repeated_transitions_codec);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
